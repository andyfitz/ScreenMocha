[{"/Users/james/Documents/design/screen-mocks/src/index.js":"1","/Users/james/Documents/design/screen-mocks/src/App.js":"2","/Users/james/Documents/design/screen-mocks/src/BrowserFrame.js":"3","/Users/james/Documents/design/screen-mocks/src/Shapes.js":"4"},{"size":219,"mtime":1607899053653,"results":"5","hashOfConfig":"6"},{"size":858,"mtime":1608354635335,"results":"7","hashOfConfig":"6"},{"size":2169,"mtime":1608005643516,"results":"8","hashOfConfig":"6"},{"size":2094,"mtime":1607926896146,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18jh04w",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/james/Documents/design/screen-mocks/src/index.js",[],"/Users/james/Documents/design/screen-mocks/src/App.js",["19","20"],"/Users/james/Documents/design/screen-mocks/src/BrowserFrame.js",["21","22"],"/Users/james/Documents/design/screen-mocks/src/Shapes.js",["23"],"/** @jsxImportSource @emotion/react */\nimport { css, jsx } from '@emotion/react';\n\nconst Shapes = ({ ...rest }) => {\n  function getRandomLength() {\n    return Math.floor(Math.random() * 500 + 100);\n  }\n  function getRandomGap() {\n    return Math.floor(Math.random() * 500 + 900);\n  }\n\n  const velocity = '200s';\n\n  return (\n    <div\n      css={{\n        overflow: 'hidden',\n        backgroundColor: 'white',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      {...rest}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        viewBox=\"100 100 600 600\"\n        preserveAspectRatio=\"xMidYMid slice\"\n        css={css`\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          left: 0;\n          right: 0;\n          height: 100%;\n          width: 100vw;\n          margin: 0;\n\n          circle {\n            fill: transparent;\n            stroke: url(#bggrad);\n            stroke-linecap: round;\n            animation: bgmove ${velocity} linear infinite;\n          }\n\n          @keyframes bgmove {\n            0% {\n              stroke-dashoffset: 1000;\n            }\n\n            100% {\n              stroke-dashoffset: 0;\n            }\n          }\n        `}\n      >\n        {[0, 1, 2, 3, 4].map((item) => (\n          <circle\n            key={item}\n            r={Math.floor(Math.random() * 900) + 100}\n            cx={Math.floor(Math.random() * 900)}\n            cy={Math.floor(Math.random() * 900)}\n            strokeWidth={Math.floor(Math.random() * 200 + 75)}\n            strokeDasharray={`${getRandomLength()} ${getRandomGap()}`}\n          />\n        ))}\n      </svg>\n      <svg style={{ pointerEvents: 'none' }}>\n        <defs>\n          <linearGradient id=\"bggrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n            <stop offset=\"0%\" css={{ stopColor: '#e40046' }} />\n            <stop\n              offset=\"100%\"\n              css={{ stopColor: '#f08c7a' }}\n            />\n          </linearGradient>\n        </defs>\n      </svg>\n    </div>\n  );\n};\n\nexport default Shapes;\n",{"ruleId":"24","severity":1,"message":"25","line":3,"column":10,"nodeType":"26","messageId":"27","endLine":3,"endColumn":13},{"ruleId":"24","severity":1,"message":"28","line":6,"column":8,"nodeType":"26","messageId":"27","endLine":6,"endColumn":14},{"ruleId":"24","severity":1,"message":"25","line":3,"column":10,"nodeType":"26","messageId":"27","endLine":3,"endColumn":13},{"ruleId":"29","severity":1,"message":"30","line":28,"column":6,"nodeType":"31","endLine":28,"endColumn":18,"suggestions":"32"},{"ruleId":"24","severity":1,"message":"25","line":2,"column":15,"nodeType":"26","messageId":"27","endLine":2,"endColumn":18},"no-unused-vars","'jsx' is defined but never used.","Identifier","unusedVar","'Shapes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'previewSize'. Either include it or remove the dependency array. You can also do a functional update 'setPreviewSize(p => ...)' if you only need 'previewSize' in the 'setPreviewSize' call.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [previewRef, previewSize]",{"range":"36","text":"37"},[687,699],"[previewRef, previewSize]"]